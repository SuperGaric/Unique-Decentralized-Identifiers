/*
 * Generated by asn1c-0.9.29 (http://lionet.info/asn1c)
 * From ASN.1 module "EUTRA-RRC-Definitions"
 * 	found in "/home/dmt/openairinterface5g/openair2/RRC/LTE/MESSAGES/ASN.1/lte-rrc-16.13.0.asn1"
 * 	`asn1c -pdu=all -fcompound-names -gen-UPER -no-gen-BER -no-gen-JER -no-gen-OER -gen-APER -no-gen-example -D /home/dmt/openairinterface5g/cmake_targets/ran_build/build/openair2/RRC/LTE/MESSAGES`
 */

#ifndef	_LTE_RLF_TimersAndConstantsMCG_Failure_r16_H_
#define	_LTE_RLF_TimersAndConstantsMCG_Failure_r16_H_


#include <asn_application.h>

/* Including external dependencies */
#include <NULL.h>
#include <NativeEnumerated.h>
#include <constr_SEQUENCE.h>
#include <constr_CHOICE.h>

#ifdef __cplusplus
extern "C" {
#endif

/* Dependencies */
typedef enum LTE_RLF_TimersAndConstantsMCG_Failure_r16_PR {
	LTE_RLF_TimersAndConstantsMCG_Failure_r16_PR_NOTHING,	/* No components present */
	LTE_RLF_TimersAndConstantsMCG_Failure_r16_PR_release,
	LTE_RLF_TimersAndConstantsMCG_Failure_r16_PR_setup
} LTE_RLF_TimersAndConstantsMCG_Failure_r16_PR;
typedef enum LTE_RLF_TimersAndConstantsMCG_Failure_r16__setup__t316_r16 {
	LTE_RLF_TimersAndConstantsMCG_Failure_r16__setup__t316_r16_ms50	= 0,
	LTE_RLF_TimersAndConstantsMCG_Failure_r16__setup__t316_r16_ms100	= 1,
	LTE_RLF_TimersAndConstantsMCG_Failure_r16__setup__t316_r16_ms200	= 2,
	LTE_RLF_TimersAndConstantsMCG_Failure_r16__setup__t316_r16_ms300	= 3,
	LTE_RLF_TimersAndConstantsMCG_Failure_r16__setup__t316_r16_ms400	= 4,
	LTE_RLF_TimersAndConstantsMCG_Failure_r16__setup__t316_r16_ms500	= 5,
	LTE_RLF_TimersAndConstantsMCG_Failure_r16__setup__t316_r16_ms600	= 6,
	LTE_RLF_TimersAndConstantsMCG_Failure_r16__setup__t316_r16_ms1000	= 7,
	LTE_RLF_TimersAndConstantsMCG_Failure_r16__setup__t316_r16_ms1500	= 8,
	LTE_RLF_TimersAndConstantsMCG_Failure_r16__setup__t316_r16_ms2000	= 9
} e_LTE_RLF_TimersAndConstantsMCG_Failure_r16__setup__t316_r16;

/* LTE_RLF-TimersAndConstantsMCG-Failure-r16 */
typedef struct LTE_RLF_TimersAndConstantsMCG_Failure_r16 {
	LTE_RLF_TimersAndConstantsMCG_Failure_r16_PR present;
	union LTE_RLF_TimersAndConstantsMCG_Failure_r16_u {
		NULL_t	 release;
		struct LTE_RLF_TimersAndConstantsMCG_Failure_r16__setup {
			long	 t316_r16;
			/*
			 * This type is extensible,
			 * possible extensions are below.
			 */
			
			/* Context for parsing across buffer boundaries */
			asn_struct_ctx_t _asn_ctx;
		} setup;
	} choice;
	
	/* Context for parsing across buffer boundaries */
	asn_struct_ctx_t _asn_ctx;
} LTE_RLF_TimersAndConstantsMCG_Failure_r16_t;

/* Implementation */
/* extern asn_TYPE_descriptor_t asn_DEF_LTE_t316_r16_4;	// (Use -fall-defs-global to expose) */
extern asn_TYPE_descriptor_t asn_DEF_LTE_RLF_TimersAndConstantsMCG_Failure_r16;
extern asn_CHOICE_specifics_t asn_SPC_LTE_RLF_TimersAndConstantsMCG_Failure_r16_specs_1;
extern asn_TYPE_member_t asn_MBR_LTE_RLF_TimersAndConstantsMCG_Failure_r16_1[2];
extern asn_per_constraints_t asn_PER_type_LTE_RLF_TimersAndConstantsMCG_Failure_r16_constr_1;

#ifdef __cplusplus
}
#endif

#endif	/* _LTE_RLF_TimersAndConstantsMCG_Failure_r16_H_ */
#include <asn_internal.h>
